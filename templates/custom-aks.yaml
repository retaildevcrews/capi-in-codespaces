apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: default
spec:
  clusterNetwork:
    services:
      cidrBlocks:
      - 192.168.0.0/16
  controlPlaneRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: AzureManagedControlPlane
    name: ${CLUSTER_NAME}
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: AzureManagedCluster
    name: ${CLUSTER_NAME}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureManagedControlPlane
metadata:
  name: ${CLUSTER_NAME}
spec:
  identityRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: AzureClusterIdentity
    name: "${CLUSTER_IDENTITY_NAME}"
  subscriptionID: ${AZURE_SUBSCRIPTION_ID}
  resourceGroupName: "${AZURE_RESOURCE_GROUP:=${CLUSTER_NAME}}"
  location: "${AZURE_LOCATION}"
  version: "${KUBERNETES_VERSION}"
  apiServerAccessProfile:
    enablePrivateCluster: ${PRIVATE_CLUSTER:=false}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureManagedCluster
metadata:
  name: ${CLUSTER_NAME}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachinePool
metadata:
  name: "${CLUSTER_NAME}-pool0"
spec:
  clusterName: "${CLUSTER_NAME}"
  replicas: ${WORKER_MACHINE_COUNT}
  template:
    metadata: {}
    spec:
      bootstrap:
        dataSecretName: ""
      clusterName: "${CLUSTER_NAME}"
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureManagedMachinePool
        name: "${CLUSTER_NAME}-pool0"
      version: "${KUBERNETES_VERSION}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureManagedMachinePool
metadata:
  name: "${CLUSTER_NAME}-pool0"
spec:
  mode: System
  sku: "${AZURE_NODE_MACHINE_TYPE}"
  name: pool0
  kubeletConfig:
    cpuCfsQuota: ${AZURE_NODE_KUBELET_CPUCFSQUOTA:=true}
  linuxOSConfig:
    sysctls:
      fsFileMax: ${AZURE_NODE_LINUXOSCONFIG_FSFILEMAX:=709620}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureClusterIdentity
metadata:
  name: "${CLUSTER_IDENTITY_NAME}"
  labels:
    clusterctl.cluster.x-k8s.io/move-hierarchy: "true"
spec:
  type: ServicePrincipal
  allowedNamespaces: {}
  tenantID: "${AZURE_TENANT_ID}"
  clientID: "${AZURE_CLIENT_ID}"
  clientSecret: {"name":"${AZURE_CLUSTER_IDENTITY_SECRET_NAME}","namespace":"${AZURE_CLUSTER_IDENTITY_SECRET_NAMESPACE}"}
